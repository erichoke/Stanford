% This program calculates the spectral Missmatch factor needed to 
% calibrate the power of the solar simulator.  The missmatch factor
% is calculated from the EQE of the test cell which the
% user is prompted to open, and from a library data file containing
% the relative EQE of the reference photodetector solar 
% simulator spectrum and the AM 1.5 spectrum. The program also calculates
% the currents the device and photodetector should put out when the
% missmatch factor is accounted for correctly.

% Format of data files: The user specified tab delimited EQE file for the organic
% solar cell being tested must have wavelength data in the first column
% and the EQE in the second column (format generated by EQE program).  
% The program interpolates and assumes the EQE is zero outside of the 
% wavelength range of the file.

% Eric Hoke April 10, 2009
% Revised ETH Jan 21, 2014

function M= MissmatchFactor
% PROMPT FOR Organic device EQE DATA and Read in Data
[EQEName,EQEPath] = uigetfile('*.*','Open EQE File and select data (first column wavelength, second relative EQE)'); % File Open dialogue box for Absorption file
temp=dlmread(strcat(EQEPath,EQEName),'\t',1,0);
deviceEQE=temp(:,1:2);

% EQE spectra of calibration photodetector
CalibrationPhotoDetectorArea= 0.735/10.0845; % (cm2) This assumes NREL calibration
diodeEQE=xlsread('Mismatch_spectra.xls','KG5 Photodiode EQE');
%diodeEQE=xlsread('Mismatch_spectra.xls','S1787-08 Si Photodiode EQE');
%diodeEQE=xlsread('Mismatch_spectra.xls','S1787-08 780nm longpass');
%diodeEQE=xlsread('Mismatch_spectra.xls','ShriramNewportCalibration Diode');

% Ideal spectra we are trying to simulate device performance under
% converted to photocurrent flux, in units of mA/cm2-nm
AM15=xlsread('Mismatch_spectra.xls','AM 1.5G flux');
%AM15=xlsread('Mismatch_spectra.xls','AM 1.5G flux');

% Actual Spectrum of Lamp- needs to be proportional to photon flux
% SolarSim=xlsread('Mismatch_spectra.xls','McGehee Solar simulator spec');
SolarSim=xlsread('Mismatch_spectra.xls','Shriram Solar Simulator');

% Interpolate spectra, assume data is zero beyond where data is available
lambda = 300:1300; %lambda values to interpolate to for computing integral

deviceEQEIn = interp1(deviceEQE(:,1),deviceEQE(:,2),lambda,'linear',0);
diodeEQEIn = interp1(diodeEQE(:,1),diodeEQE(:,2),lambda,'linear',0);
AM15In = interp1(AM15(:,1),AM15(:,2),lambda,'linear',0);
SolarSimIn = interp1(SolarSim(:,1),SolarSim(:,2),lambda,'linear',0);

% Calculate missmatch factor
disp('Missmatch factor:')
M=(deviceEQEIn*SolarSimIn')/(deviceEQEIn*AM15In')*(diodeEQEIn*AM15In')/(diodeEQEIn*SolarSimIn')

disp('Correct Device photocurrent (mA/cm2):')
deviceEQEIn*AM15In'
disp('Correct calibration Diode photocurrent (mA):')
diodeEQEIn*AM15In'/M*CalibrationPhotoDetectorArea
disp('Correct calibration Diode photocurrent, accounting for spectral missmatch (mA/cm2):')
diodeEQEIn*AM15In'/M
disp('Calibration Diode photocurrent under ideal spectrum (mA/cm2):')
diodeEQEIn*AM15In'
disp('Device photocurrent, if spectral missmatch were not accounted for (mA/cm2):')
deviceEQEIn*AM15In'*M


